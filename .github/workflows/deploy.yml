name: DEPLOYMENT

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: build
   
    steps:
    # CHECKOUT SOURCE CODE
    - uses: actions/checkout@v2

    # SETING UP JAVA FOR BUILD
    - uses: actions/setup-java@v1
      with:
        java-version: '11'

    # BUILD ONLY NOT TEST & UPLOAD RESULT
    - name: Build Artifact
      run: mvn clean install -DskipTests

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: artifact
        path: '${{ github.workspace }}/target/*.jar'
  
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: [build]

    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    
    - name: Load Artifact
      uses: actions/download-artifact@v2
      with:
        name: artifact
        path: '${{ github.workspace }}/target'

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    
    - name: Build and push
      run: |
        docker build -t kietara/sagaweb:latest .
        docker push kietara/sagaweb:latest
      # # working-directory: ${{ github.workspace }}
      # id: docker_build
      # uses: docker/build-push-action@v2
      # with:
      #   context: .${{ github.workspace }}
      #   push: true
      #   tags: kietara/sagaweb:latest
      
      
      

  
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [push_to_registry]

    environment:
      name: Production
      url: 'https://econline.org'
    
    steps:
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.BOKIE_SERVER_HOST }}
        username: ${{ secrets.BOKIE_SERVER_USERNAME }}
        password: ${{ secrets.BOKIE_SERVER_PASSWORD }}
        port: ${{ secrets.BOKIE_SERVER_PORT }}
        script: | 
          docker run -d --name saga-web -p 12300:8080 -e spring.datasource.url=jdbc:mysql://192.168.88.254:3306/sagaeco -e spring.datasource.password=${{ secrets.SAGADB_PASSWORD }} kietara/sagaweb:latest